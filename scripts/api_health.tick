// This script is meant to alert when the api health check takes an abnormally
// long amount of time.
var db = 'telegraf'
var rp = 'two_weeks'
var measurement = 'api_health_check_api'

var groupBy = []
var whereFilter = lambda: TRUE

var name = 'API Health'

var idVar = name + ':{{.Group}}'
var message = '[{{.Level}}] {{.ID}} '
var idTag = 'alertID'
var levelTag = 'level'
var messageField = 'message'
var durationField = 'duration'

var outputDB = 'chronograf'
var outputRP = 'autogen'
var outputMeasurement = 'alerts'

var triggerType = 'relative'
var shift = 5m

var crit = 50

var data = stream
    |from()
        .database(db)
        .retentionPolicy(rp)
        .measurement(measurement)
        .groupBy(groupBy)
        .where(whereFilter)
    |eval(lambda: "mean")
        .as('value')

var past = data
    |shift(shift)

var current = data

var trigger = past
    |join(current)
        .as('past', 'current')
    |eval(lambda: abs(float("current.value" - "past.value")) / float("past.value") * 100.0)
        .keep()
        .as('value')
    |alert()
        .crit(lambda: "value" > crit)
        .stateChangesOnly()
        .message(message)
        .id(idVar)
        .idTag(idTag)
        .levelTag(levelTag)
        .messageField(messageField)
        .durationField(durationField)
        .log('/tmp/alerts.log')

trigger
    |influxDBOut()
        .create()
        .database(outputDB)
        .retentionPolicy(outputRP)
        .measurement(outputMeasurement)
        .tag('alertName', name)
        .tag('triggerType', triggerType)

trigger
    |httpOut('output')
